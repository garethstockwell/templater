#!/bin/bash

# {{PROJECT}l}

# This script is a skeleton, generated by a templating engine.
# Lines where changes to this template should be made are marked with comments
# starting [CHANGE]


#------------------------------------------------------------------------------
# Constants
#------------------------------------------------------------------------------

SCRIPT_NAME={{PROJECT}l}

SCRIPT_VERSION=0.1

# Arguments
# [CHANGE] apply correct list of required arguments
SCRIPT_ARGUMENTS='source dest'


#------------------------------------------------------------------------------
# Imports
#------------------------------------------------------------------------------

source $(dirname $0)/functions.sh


#------------------------------------------------------------------------------
# Variables populated by command-line
#------------------------------------------------------------------------------


#------------------------------------------------------------------------------
# Functions
#------------------------------------------------------------------------------

function print_usage()
{
	# [CHANGE] Modify descriptions of arguments and options
	cat << EOF
$USAGE_HEADER

Arguments:
    source                  Source path
    dest                    Destination path

$USAGE_STANDARD_OPTIONS

    --foo=FOO               Example of an option which takes a value

EOF
}

function parse_command_line()
{
	eval set -- $unused_args

	for token in "$@"; do
		# If the previous option needs an argument, assign it.
		if [[ -n "$prev" ]]; then
			eval "$prev=\$token"
			prev=
			continue
		fi

		optarg=`expr "x$token" : 'x[^=]*=\(.*\)'`

		case $token in
			# Example of an option which takes an argument
			# [CHANGE] replace the following with real argument-taking
			# options
			--foo)
				prev=opt_foo
				;;
			--foo=*)
				opt_foo=$optarg
				;;

			# Environment variables
			*=*)
				envvar=`expr "x$token" : 'x\([^=]*\)='`
				optarg=`echo "$optarg" | sed "s/'/'\\\\\\\\''/g"`
				eval "$envvar='$optarg'"
				export $envvar
				;;

			# Unrecognized options
			-*)
				warn "Unrecognized option '$token' ignored"
				;;

			# Normal arguments
			*)
				handle_arg $token
				;;
		esac
	done

	check_sufficient_args
}

function print_summary()
{
	print_standard_summary

	# [CHANGE] update following block to echo relevant option values
	cat << EOF

foo ..................................... $opt_foo

EOF
}


#------------------------------------------------------------------------------
# Main
#------------------------------------------------------------------------------

args=
for arg in "$@"; do
	args="$args \"$arg\""
done

parse_standard_args $args
parse_command_line

[[ $opt_help == yes ]] && print_usage && exit 0
[[ $opt_version == yes ]] && print_version && exit 0
[[ $opt_verbosity != silent ]] && print_summary

print_banner Starting execution

# Some dummy commands
# [CHANGE] replace this with the real meat of the script
execute ls $arg_source

